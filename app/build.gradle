plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {

    def keystorePropertiesFileName = "../local.properties"
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(file(keystorePropertiesFileName)))

    def keystoreFile = keystoreProperties['storeFile']
    if (null == keystoreFile) throw new NullPointerException("There is no 'storeFile' field in "+keystorePropertiesFileName)

    def keystorePassword = keystoreProperties['storePassword']
    if (null == keystorePassword) throw new NullPointerException("There is no 'storePassword' field in "+keystorePropertiesFileName)

    /* Не называй переменную 'keyAlias' - это нарушает работу скрипта. */
    def keystoreKeyAlias = keystoreProperties['keyAlias']
    if (null == keystoreKeyAlias) throw new NullPointerException("There is no 'keyAlias' field in "+keystorePropertiesFileName)

    def keystoreKeyPassword = keystoreProperties['keyPassword']
    if (null == keystoreKeyPassword) throw new NullPointerException("There is no 'keyPassword' field in "+keystorePropertiesFileName)

    signingConfigs {
        release {
            storeFile = file(keystoreFile)
            storePassword = keystorePassword
            keyAlias = keystoreKeyAlias
            keyPassword = keystoreKeyPassword
        }
        debug {
            storeFile = file(keystoreFile)
            storePassword = keystorePassword
            keyAlias = keystoreKeyAlias
            keyPassword = keystoreKeyPassword
        }
    }

    namespace 'com.github.aakumykov.selected_text_web_search.git'
    compileSdk 34

    defaultConfig {
        applicationId "com.github.aakumykov.selected_text_web_search.git"
        minSdk 23
        targetSdk 34
        versionCode 4
        versionName "2.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildFeatures {
        viewBinding true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.13.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
}